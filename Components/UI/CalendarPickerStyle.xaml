<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <Style x:Key="DefaultDatePicker" TargetType="DatePicker">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="Padding" Value="{StaticResource Space-16}" />
        <Setter Property="FontSize" Value="{StaticResource BodySize}" />
        <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="MinHeight" Value="52" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DatePicker">
                    <Grid VerticalAlignment="Stretch">
                        <Border
                            x:Name="Border"
                            Margin="{TemplateBinding Margin}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{StaticResource SmallRadius}" />
                        <Grid Margin="{StaticResource Space-16}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <!--  DatePickerTextBox with IsReadOnly set to True  -->
                            <DatePickerTextBox
                                x:Name="PART_TextBox"
                                Grid.Column="0"
                                Padding="0"
                                VerticalAlignment="Center"
                                Background="Transparent"
                                BorderThickness="0"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                Foreground="{TemplateBinding Foreground}"
                                IsReadOnly="True" />
                            <!--  Calendar Icon Button  -->
                            <Border
                                Grid.Column="1"
                                ClipToBounds="True"
                                CornerRadius="{StaticResource SmallRadius}">
                                <ToggleButton
                                    x:Name="PART_Button"
                                    Width="20"
                                    Height="20"
                                    Padding="0"
                                    VerticalAlignment="Center"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    BorderThickness="0"
                                    Cursor="Hand">
                                    <!--  Remove focus visual style  -->
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Border
                                                Background="Transparent"
                                                BorderBrush="Transparent"
                                                BorderThickness="0">
                                                <ContentPresenter />
                                            </Border>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                    <!--  Icon that changes based on IsChecked  -->
                                    <Image
                                        x:Name="CalendarIcon"
                                        Width="20"
                                        Height="20"
                                        Source="/Components/Images/calendar.png" />
                                </ToggleButton>
                            </Border>
                        </Grid>
                        <!--  Popup for DatePicker  -->
                        <Popup
                            x:Name="PART_Popup"
                            AllowsTransparency="True"
                            Placement="Bottom"
                            PlacementTarget="{Binding ElementName=Border}"
                            StaysOpen="False">
                            <Border
                                Background="{StaticResource BackgroundBrush}"
                                BorderBrush="{StaticResource BorderBrush}"
                                BorderThickness="1"
                                CornerRadius="{StaticResource SmallRadius}">
                                <!--  Add TargetNullValue to handle null values  -->
                                <Calendar
                                    x:Name="PART_Calendar"
                                    DisplayDate="{Binding SelectedDate, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={x:Static system:DateTime.Now}}"
                                    SelectedDate="{Binding SelectedDate, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, TargetNullValue={x:Static system:DateTime.Now}}" />
                            </Border>
                            <!--  Add EventTrigger to handle Popup.Closed  -->
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Closed">
                                    <i:ChangePropertyAction
                                        PropertyName="IsChecked"
                                        TargetName="PART_Button"
                                        Value="False" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--  Open Popup when ToggleButton is checked  -->
                        <Trigger SourceName="PART_Button" Property="IsChecked" Value="True">
                            <Setter TargetName="PART_Popup" Property="IsOpen" Value="True" />
                        </Trigger>
                        <!--  Change icon based on ToggleButton state  -->
                        <Trigger SourceName="PART_Button" Property="IsChecked" Value="True">
                            <Setter TargetName="CalendarIcon" Property="Source" Value="/Components/Images/calendar-filled.png" />
                        </Trigger>
                        <Trigger SourceName="PART_Button" Property="IsChecked" Value="False">
                            <Setter TargetName="CalendarIcon" Property="Source" Value="/Components/Images/calendar.png" />
                        </Trigger>
                        <!--  Disabled state  -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>